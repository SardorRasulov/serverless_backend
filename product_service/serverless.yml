# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: "product-service"
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-northeast-1
  profile: admin

  # you can define service wide environment variables here
  environment:
    PRODUCTS_TABLE_NAME: Product
    STOCKS_TABLE_NAME: stocks

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'dynamodb:BatchWriteItem'
            - 'dynamodb:Scan'
            - 'dynamodb:Query'
          Resource:
            - 'arn:aws:dynamodb:ap-northeast-1:700058269365:table/Product'
        - Effect: Allow
          Action:
            - 'sns:ListTopics'
            - 'sns:Publish'
          Resource:
            - 'arn:aws:sns:ap-northeast-1:700058269365:*'

functions:
  getProductsListV2:
    handler: handlers/getProductsListV2.getProductsListV2
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductByIdV2:
    handler: handlers/getProductByIdV2.getProductByIdV2
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                productId: true
  createProductV1:
    handler: handlers/createProductV1.createProductV1
    events:
      - http:
          path: products
          method: post
          cors: true
          request:
            schemas:
              application/json: ${file(src/schemas/createProductSchema.json)}
  catalogBatchProcess:
    handler: handlers/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - CatalogItemsQueue
              - Arn
          batchSize: 5

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "catalogItemsQueue"
    CreateProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: "createProductTopic"
    MySubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: gitquil98@gmail.com
        Protocol: email
        TopicArn: !Ref CreateProductTopic
        FilterPolicy:
          Price: [{"numeric": [">", 3]}]
    MyOtherSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: gitquil07@gmail.com
        Protocol: email
        TopicArn: !Ref CreateProductTopic
        FilterPolicy:
          title: [{"prefix": "Title_"}]
